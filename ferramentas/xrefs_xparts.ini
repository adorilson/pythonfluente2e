# Referências cruzadas para outras partes
# Aqui só aparecem xrefs <<xxxx>> para outras partes do livro
[ch_data_model]
ch_ifaces_prot_abc = parte 3
ch_generators = parte 4
ch_op_overload = parte 3
ch_seq_methods = parte 3

[ch_sequences]
ch_seq_methods = parte 3
ch_ifaces_prot_abc = parte 3
ch_func_objects = parte 2
ch_generators = parte 4
ch_op_overload = parte 3

[ch_dicts_sets]
ch_op_overload = parte 3
ch_ifaces_prot_abc = parte 3
ch_func_objects = parte 2

[ch_str_bytes]

[ch_dataclass]
ch_more_types = parte 3
ch_class_metaprog = parte 5
ch_type_hints_def = parte 2
ch_descriptors = parte 5

[ch_refs_mut_mem]

[ch_func_objects]
ch_async = parte 4
ch_generators = parte 4

[ch_type_hints_def]
ch_more_types = parte 3
ch_ifaces_prot_abc = parte 3
ch_dataclass = parte 1
ch_async = parte 4
ch_generators = parte 4
ch_class_metaprog = parte 5

[ch_closure_decorator]
ch_class_metaprog = parte 5
ch_ifaces_prot_abc = parte 3
ch_descriptors = parte 5

[ch_design_patterns]
ch_generators = parte 4

[ch_pythonic_obj]
ch_data_model = parte 1
ex_vector2d = parte 1
ch_generators = parte 4
ch_dynamic_attrs = parte 5
special_names_tbl = parte 1
ch_dataclass = parte 1

[ch_seq_methods]
ch_generators = parte 4
ch_data_model = parte 1
ex_pythonic_deck = parte 1

[ch_ifaces_prot_abc]
ch_type_hints_def = parte 2
ch_data_model = parte 1
ex_pythonic_deck = parte 1
ch_dicts_sets = parte 1
ch_generators = parte 4
ch_refs_mut_mem = parte 1
ch_class_metaprog = parte 5

[ch_inheritance]
ch_descriptors = parte 5

[ch_more_types]
ch_type_hints_def = parte 2
ch_dataclass = parte 1
ch_class_metaprog = parte 5
ch_async = parte 4

[ch_op_overload]
data_model_emulating_sec = parte 1
ch_data_model = parte 1
ex_vector2d = parte 1
ch_generators = parte 4

[ch_generators]
ch_data_model = parte 1
ch_closure_decorator = parte 2

[ch_with_match]

[ch_concurrency_models]

[ch_executors]

[ch_async]
ch_type_hints_def = parte 2

[ch_dynamic_attrs]
ch_pythonic_obj = parte 3
ch_closure_decorator = parte 2
ch_generators = parte 4

[ch_descriptors]
ch_refs_mut_mem = parte 1

[ch_class_metaprog]
ch_dataclass = parte 1
